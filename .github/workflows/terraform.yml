name: 'Terraform CI/CD'

on:
  push:
    branches: 
      - main
    paths:
      - '**.go'
  pull_request:
    paths:
      - 'infra/terraform/aws-prod'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra/terraform/aws-prod
    env:
      TF_VAR_my_ip: ${{ secrets.MY_IP_FOR_SSH }}
      TF_VAR_db_host: ${{ secrets.HOST_DB }} 
      TF_VAR_dbname: ${{ secrets.DB_NAME }}
      TF_VAR_dbuser: ${{ secrets.DB_USER }}
      TF_VAR_dbpassword: ${{ secrets.DB_PASSWORD }}
      TF_VAR_db_port: ${{ secrets.DB_PORT }}
      TF_VAR_redis_host: ${{ secrets.REDIS_HOST }} 
      TF_VAR_redis_addr: ${{ secrets.REDIS_ADDR }}
      TF_VAR_redis_port: ${{ secrets.REDIS_PORT }}
      TF_VAR_redis_conf: ${{ secrets.REDIS_CONF }}
      TF_VAR_gemini_key: ${{ secrets.GEMINI_KEY }}
      TF_VAR_ai_model: ${{ secrets.AI_MODEL }}
      
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.0
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Terraform init
        run: terraform init
      
      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
      
      - name: Terraform Plan for Main
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform plan -out=tfplan
      
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve "tfplan"